/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M15
 * Generated at: 2017-01-18 07:06:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pro_005fver2;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ProductInput_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title> 제품 등록 화면 </title>\r\n");
      out.write("<script src=\"../js/jquery-3.js\"> </script>\r\n");
      out.write("<script>\r\n");
      out.write("   function data_check(){\r\n");
      out.write("\t   if($(\"#sabun\").val()==\"\"){\r\n");
      out.write("\t\t   alert(\"사번을 입력하세요.\")\r\n");
      out.write("\t\t   $(\"#sabun\").focus();\r\n");
      out.write("\t\t   return false;\r\n");
      out.write("\t   }\r\n");
      out.write("\t   if($(\"#saname\").val()==\"\"){\r\n");
      out.write("\t\t   alert(\"이름을 입력하세요.\")\r\n");
      out.write("\t\t   $(\"#saname\").focus();\r\n");
      out.write("\t\t   return false;\r\n");
      out.write("\t   }\r\n");
      out.write("\t   if($(\"#procode\").val()==\"\"){\r\n");
      out.write("\t\t   alert(\"제품코드를 선택하세요.\")\r\n");
      out.write("\t\t   $(\"#procode\").focus();\r\n");
      out.write("\t\t   return false;\r\n");
      out.write("\t   }\r\n");
      out.write("   } // end\r\n");
      out.write("   \r\n");
      out.write("   $(function(){ // 브라우저 로딩 시 자동 실행\r\n");
      out.write("\t   $(\"#procode\").change(function(obj){\r\n");
      out.write("\t\t   // select 변화시 실행되는 내용 \r\n");
      out.write("\t\t   var value = $(obj.target).val();\r\n");
      out.write("\t\t   if(value == \"k0001\"){ // 냉장고, 650000\r\n");
      out.write("\t\t\t   $(\"#proname\").attr('value', '냉장고'); //attr('속성', '값')\r\n");
      out.write("\t\t\t   $(\"#price\").attr('value', 650000);\r\n");
      out.write("\t\t   }\r\n");
      out.write("\t\t   if(value == \"k0002\"){ // 세탁기, 750000\r\n");
      out.write("\t\t\t   $(\"#proname\").attr('value', '세탁기'); //attr('속성', '값')\r\n");
      out.write("\t\t\t   $(\"#price\").attr('value', 750000);\r\n");
      out.write("\t\t   }\r\n");
      out.write("\t\t   if(value == \"k0003\"){ // HDTV, 950000\r\n");
      out.write("\t\t\t   $(\"#proname\").attr('value', 'HDTV'); //attr('속성', '값')\r\n");
      out.write("\t\t\t   $(\"#price\").attr('value', 950000);\r\n");
      out.write("\t\t   }\r\n");
      out.write("\t   });\r\n");
      out.write("   \r\n");
      out.write("       $(\"#btn\").click(function() {\r\n");
      out.write("\t\t   // [취소] 버튼 클릭 시 실행\r\n");
      out.write("    \t   $(\"#proname\").attr('value', '');\r\n");
      out.write("    \t   $(\"#price\").attr('value', '');\t\t   \r\n");
      out.write("\t   });       \r\n");
      out.write("   });\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div align=\"center\">\r\n");
      out.write("\t<h2> 제품 등록하기 </h2>\r\n");
      out.write("\t<hr>\r\n");
      out.write("\t<form method=\"post\" action=\"ProductOutput.jsp\"\r\n");
      out.write("\t      onsubmit=\"return  data_check()\">\r\n");
      out.write("\t  <table border=\"1\" width=\"300\">  \r\n");
      out.write("\t    <tr>\r\n");
      out.write("\t        <th>사 번 </th>\r\n");
      out.write("\t        <td> <input name=\"sabun\" id=\"sabun\"> </td>\r\n");
      out.write("\t    </tr>\r\n");
      out.write("\t    <tr>\r\n");
      out.write("\t        <th> 이 름 </th>\r\n");
      out.write("\t        <td> <input name=\"saname\" id=\"saname\"> </td>\r\n");
      out.write("\t    </tr>\r\n");
      out.write("\t    <tr>\r\n");
      out.write("\t        <th> 제품코드 </th>\r\n");
      out.write("\t        <td> \r\n");
      out.write("\t           <select name=\"procode\" id=\"procode\">\r\n");
      out.write("\t         \t<option value=\"\">## 제품코드 선택 ##</option>\r\n");
      out.write("\t         \t<option value=\"k0001\">k0001</option>\r\n");
      out.write("\t         \t<option value=\"k0002\">k0002</option>\r\n");
      out.write("\t         \t<option value=\"k0003\">k0003</option>\r\n");
      out.write("\t      \t  </select> \r\n");
      out.write("\t        </td>\r\n");
      out.write("\t    </tr>\r\n");
      out.write("\t    <tr>\r\n");
      out.write("\t       <th> 제 품 명 </th>\r\n");
      out.write("\t       <td> <input name=\"proname\" id=\"proname\" readonly> </td>\r\n");
      out.write("\t    </tr>\r\n");
      out.write("\t     <tr>\r\n");
      out.write("\t       <th> 가 격  </th>\r\n");
      out.write("\t       <td> <input name=\"price\" id=\"price\" readonly> </td>\r\n");
      out.write("\t    </tr>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td colspan=\"2\" align=\"center\">\r\n");
      out.write("            \t<input type=\"submit\" value=\"저장\">&nbsp;&nbsp;\r\n");
      out.write("\t  \t\t\t<input type=\"reset\" value=\"취소\" id=\"btn\">\r\n");
      out.write("            </td>\r\n");
      out.write("        </tr>\r\n");
      out.write("\t  </table>  \r\n");
      out.write("\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("   </body>\r\n");
      out.write("</html>\r\n");
      out.write("   \r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
