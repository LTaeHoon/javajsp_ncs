/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M15
 * Generated at: 2017-01-31 06:52:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class member_005fzipcode_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

String zipcode,addr,addr2;
String dong = (String)request.getAttribute("dong"); 
List zipcodeList = (ArrayList)request.getAttribute("zipcodelist");

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>우편번호 검색</title>\r\n");
      out.write("<SCRIPT>\r\n");
      out.write("<!--\r\n");
      out.write("function selectnow() {\r\n");
      out.write("\r\n");
      out.write("\t/* select 객체에서 검색된 동을 선택했을때 change 이벤트가 발생한다.\r\n");
      out.write(" \t여기서 여러분들이 이해할것이 있다. 바로 form 객체가 두개 써였다는 것이다. 그 이유는 동을입력하지 않았을때 실행과 동을 입력하고 검색된 동을 선택할수 있도록 하기 위해서\r\n");
      out.write("\tpostform과 postform2 두개의 폼객체 네임 이름을 사용하였다. 유의 하기 바란다. zip 변수에 선택된 주소가 저장된다. \r\n");
      out.write("\r\n");
      out.write("\tzip1 변수에는 우편번호 앞 세자리를 저장하고 zip2 변수에는 우편번호 뒷자리 세자리를 저장한다. 그리고\r\n");
      out.write("\taddr1변수에는 나머지 주소를 저장시켜준다.\r\n");
      out.write("\r\n");
      out.write("\t여기서 length-1 을 해준 이유는 substring 메서드는 문자열 첫 시작이 0부터 시작하고 length 속성은 첫 시작이 1부터 시작하기 때문이다. 그리고 둘다 String 객체 하위의 구성요소라는 것을 꼭 알아주기 바란다.\r\n");
      out.write("\r\n");
      out.write("\t*/\r\n");
      out.write("\r\n");
      out.write("\tvar zip=document.postform.post_list.value;\r\n");
      out.write("\tvar zip1=zip.substring(0,3);\r\n");
      out.write("\tvar zip2=zip.substring(4,7);\r\n");
      out.write("\tvar addr2=zip.substring(7, (zip.length));\r\n");
      out.write("\t\r\n");
      out.write("\topener.document.f.member_zip1.value=zip1;\r\n");
      out.write("\r\n");
      out.write("\t/* 회원가입창에 첫번째 세자리 우편번호를 입력한다. */\r\n");
      out.write("\r\n");
      out.write("\topener.document.f.member_zip2.value=zip2;\r\n");
      out.write("\r\n");
      out.write("\t/* 회원가입창에 두번째 세자리 우편번호를 입력한다. */\r\n");
      out.write("\r\n");
      out.write("\topener.document.f.member_addr1.value=addr2;\r\n");
      out.write("\t\r\n");
      out.write("\t/* 회원가입창에 나머지 주소를  입력한다. */\r\n");
      out.write("\r\n");
      out.write("\tparent.window.close();\r\n");
      out.write("\r\n");
      out.write("\t/* 그리고 윈도우 창을 닫아준다.  */\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function check(form){\r\n");
      out.write("\tif(form.dong.value==\"\"){\r\n");
      out.write("\t\talert(\"동을 입력해 주세요!\");\r\n");
      out.write("\t\tform.dong.focus();\r\n");
      out.write("\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//-->\r\n");
      out.write("</SCRIPT>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("<!--\r\n");
      out.write("INPUT,SELECT{font-family: Dotum;font-size:9pt;;}\r\n");
      out.write(".style1 {\r\n");
      out.write("\tcolor: #466D1B;\r\n");
      out.write("\tfont-weight: bold;\r\n");
      out.write("\tfont-size: 12px;\r\n");
      out.write("}\r\n");
      out.write("-->\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body onload=\"postform.dong.focus();\" bgcolor=\"#FFFFFF\" topmargin=\"0\" leftmargin=\"0\">\r\n");
      out.write("<form method=\"post\" action=\"zipcode_ok.do\" name=\"postform\" onsubmit=\"return check(this)\">\r\n");
      out.write("<table width=\"414\" height=\"100\" border=\"0\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\">\r\n");
      out.write(" <tr> \r\n");
      out.write("  <td bgcolor=\"#999999\" align=\"center\"><input type=\"image\" src=\"images/ZipCode_img01.gif\" width=\"413\" height=\"58\"></td>\r\n");
      out.write(" </tr>\r\n");
      out.write(" <tr> \r\n");
      out.write("  <td bgcolor=\"f5ffea\" align=\"center\"> \r\n");
      out.write("   <strong><font color=\"#466d1b\"><span class=\"style1\">[거주지의 면.동을 입력하고 '찾기'버튼을 누르세요!!!]</span></font></strong>\r\n");
      out.write("  </td>\r\n");
      out.write(" </tr>\r\n");
      out.write(" <tr height=\"30\"> \r\n");
      out.write("  <td bgcolor=\"f5ffea\" align=\"center\"><input type=\"text\" name=\"dong\" value size=\"10\" maxlength=\"10\">&nbsp;<input type=\"image\"  src=\"images/m-i02.gif\" width=\"69\" height=\"19\" align=\"absmiddle\" onfocus=\"this.blur()\"></td>\r\n");
      out.write(" </tr>\r\n");
      out.write(" ");
if(dong != null){ 
      out.write('\r');
      out.write('\n');
      out.write(' ');
if(zipcodeList != null && zipcodeList.size() != 0){
      out.write("\r\n");
      out.write(" <tr> \r\n");
      out.write("  <td bgcolor=\"f5ffea\" height=\"30\" align=\"center\">\r\n");
      out.write("   <SELECT NAME=\"post_list\" onchange=\"selectnow()\">\r\n");
      out.write("    <option value=\"\">----주소를 선택하세요----</option>\r\n");
      out.write("\t");
for(int i = 0; i < zipcodeList.size(); i++) {	
		String data=(String)zipcodeList.get(i);
		StringTokenizer st = new StringTokenizer(data,",");
		zipcode = st.nextToken();
		addr = st.nextToken();
		addr2 = st.nextToken();
		String totaladdr = zipcode + addr;
	
      out.write("\r\n");
      out.write("\t<option value=\"");
      out.print(totaladdr);
      out.write('"');
      out.write('>');
      out.write('[');
      out.print(zipcode);
      out.write("]&nbsp;");
      out.print(addr);
      out.write("</option>\r\n");
      out.write("\t");
}
      out.write("\r\n");
      out.write("   </SELECT>\r\n");
      out.write("  </td>\r\n");
      out.write(" </tr>\r\n");
      out.write(" ");
}else{ 
      out.write("\r\n");
      out.write(" <tr>\r\n");
      out.write("  <td bgcolor=\"f5ffea\" height=\"30\" align=\"center\"><font color=\"#466d1b\"><span class=\"style1\">검색 결과가 없습니다.</span></font></td>\r\n");
      out.write(" </tr>\r\n");
      out.write(" ");
}}
      out.write("\r\n");
      out.write(" <tr> \r\n");
      out.write("  <td bgcolor=\"508C0F\" colspan=\"3\" height=\"3\"></td>\r\n");
      out.write(" </tr>\r\n");
      out.write("</table>\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
