/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M15
 * Generated at: 2017-01-17 02:37:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.actionTag.example2.plan;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class plan02_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<h1 align=\"center\">통장잔고 지켜주는 생활소비법</h1>\r\n");
      out.write("<h4 align=\"center\">사회초년생 첫 재테크</h4><br>\r\n");
      out.write("\r\n");
      out.write("수익률 1% 올리는 것과 지출 1%를 줄이는 것 중 어떤 것이 더 쉬울까? \r\n");
      out.write("투자할 때 최우선으로 고려해야 할 지표는 바로 수익률일 것이다. \r\n");
      out.write("그러나 기본적으로 합리적인 소비습관을 가지고 있지 않다면 투자는 물론 저축할 준비도 되어 있지 않다고 봐야 한다. \r\n");
      out.write("특히나 대학을 졸업하고 갓 입사한 사회초년생이라면 없다가 생긴 일정한 소득을 제대로 관리하지 못하는 경우가 많다. \r\n");
      out.write("어떤 금융상품이 좋고 나쁘고를 따지기 전에 근본적으로 저축을 방해하는 소비습관을 가지고 있진 않은지 점검해 봐야 한다. \r\n");
      out.write("<br><br>\r\n");
      out.write("<img src=image/t1.PNG style=\"float:left; padding: 0 20px 5px 0;\">\r\n");
      out.write("<b>현재를 정확하게 인식하라</b><br><br>\r\n");
      out.write("올바른 재테크의 첫걸음은 현재 상황의 정확한 인식에서 시작된다. \r\n");
      out.write("월급날이면 공과금, 카드 사용료, 대출이자 등 통장에서 돈이 물 새듯이 빠져나간다고 울상 짓는 직장선배의 이야기를 한 번쯤 들어봤을 것이다. \r\n");
      out.write("<br><br>\r\n");
      out.write("월급이 턱없이 적기 때문이라고 불만을 토로하기도 한다. \r\n");
      out.write("과연 월급이 문제일까? \r\n");
      out.write("아니다. \r\n");
      out.write("전문가와 함께 월간 현금 흐름표를 작성하고 재무 상태를 따져 볼 필요가 있는 이들이 대부분일 것이다.\r\n");
      out.write("<br><br>\r\n");
      out.write("재무상태 점검이란 결코 거창한 것이 아니다. \r\n");
      out.write("수입과 지출항목들을 나열해 보는 것이라고 여기면 된다. \r\n");
      out.write("결국, 소득과 지출 중 매월 자신이 조절하고 통제할 수 있는 것은 지출이다. \r\n");
      out.write("이 중에서도 식비, 공과금, 쇼핑에 해당하는 소비성 지출을 줄이는 습관을 들여야 한다. \r\n");
      out.write("저축이나 보험료, 대출상환이자 등의 비소비성 지출들 또한 효율성 측면에서의 점검이 필요하다. \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<br><br><b>쇼핑은 통장 잔액 내에서 해결하라</b><br><br>\r\n");
      out.write("\r\n");
      out.write("소비성 지출조절이 잘 안된다면 충동구매를 부추기는 신용카드보단 통장 잔액 내에서만 결제가 가능한 체크카드를 사용하는 게 좋다. \r\n");
      out.write("특히 새 차를 살 때 신용카드 할부로 사는 경우가 많은데, 우리나라에서 사채를 제외한 모든 종류의 대출 중 가장 비싼 이자를 내야 하는 것이 바로 자동차 할부, 즉 카드론이다. \r\n");
      out.write("카드론은 대표적인 소비성 지출로서 될 수 있으면 꼭 피해야 한다.\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<br><br><b>가계부는 지출의 25%를 줄이는 방법이다</b><br><br>\r\n");
      out.write("\r\n");
      out.write("매월 가계부를 작성하는 것만으로 지출의 25%를 줄일 수 있다. \r\n");
      out.write("매월 지출 한도 목표를 정하고 이를 지켜나갈 수 있도록 한다. \r\n");
      out.write("가계부를 쓰지 않으면 현재 지출총액을 알 수가 없으니, 목표를 정해놓은들 달성하기가 어려워진다. \r\n");
      out.write("요즘은 인터넷 홈페이지나 스마트폰 앱을 이용하여 누구나 쉽게 본인의 지출 내역을 언제든지 업데이트할 수 있어 편리하다. \r\n");
      out.write("\r\n");
      out.write("<br><br><b>1원이라도 아끼려면 손품을 팔아라</b><br><br>\r\n");
      out.write("\r\n");
      out.write("매월 일정하게 통장에서 빠져나가는 공과금도 세 가지만 신경쓰면 줄일 수 있다. \r\n");
      out.write("첫째, 우편으로 오는 모든 지로 통지서를 이메일 발송으로 변경하면, 매월 30원~100원의 요금이 할인된다. \r\n");
      out.write("둘째, 자동이체 신청까지 하면 추가할인이 가능한 공과금도 있으니, 지로통시서에 적혀있는 내용을 자세히 살펴보자. \r\n");
      out.write("셋째, 휴대폰 요금, 아파트 관리비 등의 요금을 신용카드 결제로 변경하면, 카드 종류에 따라 할인혜택도 받을 수 있고 포인트로 적립할 수 있으니 일거양득이다. \r\n");
      out.write("\r\n");
      out.write("<br><br><b>사회초년생 때 들인 습관, 100세 간다</b><br><br>\r\n");
      out.write("\r\n");
      out.write("사람의 습관이나 관성은 쉽게 바꿀 수 없기에 처음이 중요하다. \r\n");
      out.write("100만 원짜리 유명 브랜드의 점퍼를 입고 나면, 10만 원짜리 점퍼가 우습게 보인다. \r\n");
      out.write("카드결제 금액이 한 번 100만 원을 넘기면 다시 그 이하로 맞추기 어려운 게 소비습관이다. \r\n");
      out.write("저축도 마찬가지다. \r\n");
      out.write("다년간 100만 원 이상 저축해온 사람은 그 저축을 맞추기 위해 본인의 지출수준을 조절할 수밖에 없다. \r\n");
      out.write("이와 반대로 지출을 맞추기 위해 저축을 조절하는 사람들이 있는데, '주객이 전도됐다'는 말은 바로 이런 경우를 두고 하는 말일 것이다. \r\n");
      out.write("새해에는 저축 방해하는 소비습관을 바꿔보자! \r\n");
      out.write("<br><br>\r\n");
      out.write("<hr>\r\n");
      out.write("<b>글</b> 김상화<br>\r\n");
      out.write("<b>기획</b> 정아람 기자<br>\r\n");
      out.write("<b>발행</b> (주)이패스코리아<br>\r\n");
      out.write("<b>제공</b> 머니플러스<br><br>\r\n");
      out.write("<hr>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
